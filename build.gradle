import org.springframework.boot.gradle.plugin.SpringBootPlugin

buildscript {
    repositories {
        mavenCentral()
    }
}
plugins {
    id 'org.springframework.boot' version '2.6.7' apply false
    id 'org.barfuin.gradle.jacocolog' version '2.0.0'
}

project.ext.group = 'org.theoriok'
project.ext.version = '1.0-SNAPSHOT'
project.ext.name = 'inventory'

ext {
    jacocoVersion = '0.8.8'
    flywayVersion = '7.8.1'
    annotationsVersion = '13.0'
}

allprojects {
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java'

    group = rootProject.ext.group
    version = rootProject.ext.version

    repositories {
        mavenCentral()
    }

    java {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    compileJava {
        options.encoding = 'UTF-8'
    }

    test {
        useJUnitPlatform()
    }

    tasks.matching { task -> task.name.equals('jacocoAggregatedReport') }.forEach { task ->
        task.reports {
            xml.required = true
            xml.outputLocation = file("build/reports/jacocoAggregatedReport.xml")
        }
    }

    pluginManager.withPlugin('java-library') {
        apply plugin: 'jacoco'

        dependencies {
            implementation 'org.apache.commons:commons-lang3'
            implementation 'org.slf4j:slf4j-api'

            testImplementation 'org.springframework.boot:spring-boot-starter-test'
            testImplementation 'org.springframework.boot:spring-boot-starter-log4j2'
        }

        javadoc {
            javadoc.options.addStringOption('Xdoclint:none', '-quiet')
        }

        java {
            withJavadocJar()
            withSourcesJar()
        }

        jacoco {
            toolVersion = jacocoVersion
        }

        jacocoTestReport {
            reports {
                xml.required = true
                xml.outputLocation = file("build/reports/jacocoTestReport.xml")
            }
        }
    }

    dependencyManagement {
        imports {
            mavenBom SpringBootPlugin.BOM_COORDINATES
        }

        dependencies {
            dependency "org.flywaydb:flyway-core:$flywayVersion"
            dependency "org.jetbrains:annotations:$annotationsVersion"
        }
    }

    configurations.all {
        exclude group: "ch.qos.logback"

        resolutionStrategy {
            cacheChangingModulesFor 0, 'seconds'
            cacheDynamicVersionsFor 0, 'minutes'

            dependencySubstitution.all { dependency ->
                if (dependency.requested instanceof ModuleComponentSelector && dependency.requested.module == 'spring-boot-starter-logging') {
                    dependency.useTarget("org.springframework.boot:spring-boot-starter-log4j2:$dependency.requested.version", 'Use Log4j2 instead of Logback')
                }
            }
        }
    }
}
project(":main") {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'java-library'

    dependencies {
        implementation project(":application-api")
        implementation project(":application-domain")
        implementation project(":application-usecases")
        implementation project(":infrastructure-inbound-rest")
        implementation project(":infrastructure-outbound-postgres")
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.flywaydb:flyway-core'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.springframework.boot:spring-boot-starter-web'
        testImplementation 'org.springframework.boot:spring-boot-starter-data-jpa:'
        testImplementation "com.h2database:h2"
        testImplementation 'org.jetbrains:annotations'
    }

    springBoot {
        buildInfo {
            properties {
                name = rootProject.ext.name
            }
        }
    }
}

project(":application-api") {
    apply plugin: 'java-library'
}

project(":application-domain") {
    apply plugin: 'java-library'

    dependencies {
        annotationProcessor 'io.soabase.record-builder:record-builder-processor:28'
        compileOnly 'io.soabase.record-builder:record-builder-core:28'
    }
}

project(":application-usecases") {
    apply plugin: 'java-library'

    dependencies {
        implementation project(":application-api")
        implementation project(":application-domain")
        implementation 'org.springframework.boot:spring-boot-starter'

        implementation 'org.springframework:spring-context'
    }
}

project(":infrastructure-inbound-rest") {
    apply plugin: 'java-library'

    dependencies {
        implementation project(":application-api")
        implementation 'org.apache.logging.log4j:log4j-web'
        implementation 'org.springframework.boot:spring-boot-starter-web'
    }
}

project(":infrastructure-outbound-postgres") {
    apply plugin: 'java-library'

    dependencies {
        implementation project(":application-domain")
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'com.fasterxml.jackson.core:jackson-databind'
        runtimeOnly "org.postgresql:postgresql"
    }
}